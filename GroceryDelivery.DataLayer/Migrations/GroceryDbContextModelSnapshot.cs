// <auto-generated />
using System;
using GroceryDelivery.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GroceryDelivery.DataLayer.Migrations
{
    [DbContext(typeof(GroceryDbContext))]
    partial class GroceryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GroceryDelivery.Entites.ApplicationUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("HouseNo_Building_Name")
                        .IsRequired();

                    b.Property<long>("MobileNumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("PinCode");

                    b.Property<string>("Road_area")
                        .IsRequired();

                    b.Property<string>("State")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("GroceryDelivery.Entites.Menubar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("OpenInNewWindow");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Menubars");
                });

            modelBuilder.Entity("GroceryDelivery.Entites.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("Description");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<int?>("ProductOrderOrderId");

                    b.Property<string>("photo");

                    b.Property<int>("stock");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductOrderOrderId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GroceryDelivery.Entites.ProductOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("Description");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<string>("photo");

                    b.HasKey("OrderId");

                    b.ToTable("productOrders");
                });

            modelBuilder.Entity("GroceryDelivery.Entites.Product", b =>
                {
                    b.HasOne("GroceryDelivery.Entites.ProductOrder", "ProductOrder")
                        .WithMany("Product")
                        .HasForeignKey("ProductOrderOrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
